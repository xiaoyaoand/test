
// Opacity
// -------------------------
.opacity(@opacity) {
  opacity:@opacity;
  @opacityIE : @opacity * 100;
  filter:~"alpha(opacity=@{opacityIE})";
}

// Gradient
// -------------------------
.gradient(@start: #000000, @stop: #FFFFFF) {
  background:-webkit-gradient(linear, left top, right top, color-stop(0, @start), color-stop(1, @stop));
}
// Import font
// -------------------------
.font-face(@fontFamily, @fileName, @style, @weight) {
  @font-face{
    font-family:@fontFamily;
    font-style:@style;
    font-weight:@weight;
    src:url('@{fileName}.eot');
    src:local('@fontFamily'), url('@{fileName}.eot?#iefix') format('embedded-opentype'), url('@{fileName}.woff') format('woff'), url('@{fileName}.ttf') format('truetype'), url('@{fileName}.svg#@{fontFamily}') format('svg'), url("@{fileName}.otf") format('opentype');
  }
}

// Clearfix
// -------------------------
.clearfix() {
  zoom:1;
  &:before{
    content:'';
    display:block;
  }
  &:after{
    content:'';
    display:table;
    clear:both;
  }
}

// CSS image replacement
// -------------------------
.hide-text() {
  font:0/0 a;
  color:transparent;
  text-shadow:none;
  background-color:transparent;
  border:0;
}

// Force line breaks
// -------------------------
.word-break() {
  word-break:break-all;
  word-wrap:break-word;
    white-space: normal;
}

// No wrap
// -------------------------
.no-wrap() {
    word-break: normal;
    word-wrap: normal;
    white-space: nowrap;
}

// Text overflow with(...)
// -------------------------
.text-overflow() {
  overflow:hidden;
  text-overflow:ellipsis;
  white-space:nowrap;
  max-width:100%;
}

.line-overflow(@line) {
  overflow:hidden;
  text-overflow:ellipsis;
  display:-webkit-box;
  -webkit-line-clamp:@line; /* number of lines to show */
  -webkit-box-orient:vertical;
}

// Alpha background
// -------------------------
.alpha-background(@rgb:#000,@alpha:.5){
  @rgba-color:fade(@rgb,@alpha*100);
  @argb-color:argb(@rgba-color);
  background-color:@rgba-color;
  filter:~"progid:DXImageTransform.Microsoft.gradient(startColorstr='@{argb-color}', endColorstr='@{argb-color}', GradientType=0)";
  zoom:1;
  :root &{
    filter: none;
  }
}

// -------------------------
.user-select(@arguments:none){
  -webkit-user-select: @arguments;
  -moz-user-select: @arguments;
  -ms-user-select: @arguments;
  user-select: @arguments;
}

// Triangle
// -------------------------
.triangle(@direction: down, @size: 10px, @color: #000){
  display: inline-block;
  width: 0;
  height: 0;
  font-size: 0;
  line-height: 0;
  overflow: hidden;
}
.triangle(@direction: down, @size: 10px, @color: #000) when (@direction = down){
  border-color: @color transparent transparent transparent;
  border-style: solid dashed dashed dashed;
  border-width: @size @size 0 @size;
}
.triangle(@direction: down, @size: 10px, @color: #000) when(@direction = left){
  border-color: transparent @color transparent transparent;
  border-style: dashed solid dashed dashed;
  border-width: @size @size @size 0;
}
.triangle(@direction: down, @size: 10px, @color: #000) when(@direction = up){
  border-color: transparent transparent @color transparent;
  border-style: dashed dashed solid dashed;
  border-width: 0 @size @size @size;
}
.triangle(@direction: down, @size: 10px, @color: #000) when(@direction = right){
  border-color: transparent transparent transparent @color;
  border-style: dashed dashed dashed solid;
  border-width: @size 0 @size @size;
}

// Arrow
// -------------------------
.arrow(@direction: down, @size: 10px, @color: #000, @borderColor: #c00){
  position: absolute;
  width: 0;
  height: 0;
  font-size: 0;
  &:after{
    content: '';
    position: absolute;
    width: 0;
    height: 0;
    font-size: 0;
  }
}
.arrow(@direction: down, @size: 10px, @color: #fff, @borderColor: #ccc) when (@direction = down){
  border-color: @borderColor transparent transparent transparent;
  border-style: solid dashed dashed dashed;
  border-width: @size @size 0 @size;
  &:after{
    left: -@size;
    top: -(@size+1);
    border-color: @color transparent transparent transparent;
    border-style: solid dashed dashed dashed;
    border-width: @size @size 0 @size;
  }
}
.arrow(@direction: down, @size: 10px, @color: #fff, @borderColor: #ccc) when (@direction = left){
  border-color: transparent @borderColor transparent transparent;
  border-style: dashed solid dashed dashed;
  border-width: @size @size @size 0;
  &:after{
    left: 1px;
    top: -@size;
    border-color: transparent @color transparent transparent;
    border-style: dashed solid dashed dashed;
    border-width: @size @size @size 0;
  }
}
.arrow(@direction: down, @size: 10px, @color: #fff, @borderColor: #ccc) when (@direction = up){
  border-color: transparent transparent @borderColor transparent;
  border-style: dashed dashed solid dashed;
  border-width: 0 @size @size @size;
  &:after{
    left: -@size;
    top: 1px;
    border-color: transparent transparent @color transparent;
    border-style: dashed dashed solid dashed;
    border-width: 0 @size @size @size;
  }
}
.arrow(@direction: down, @size: 10px, @color: #fff, @borderColor: #ccc) when (@direction = right){
  border-color: transparent transparent transparent @borderColor;
  border-style: dashed dashed dashed solid;
  border-width: @size 0 @size @size;
  &:after{
    left: -(@size+1);
    top: -@size;
    border-color: transparent transparent transparent @color;
    border-style: dashed dashed dashed solid;
    border-width: @size 0 @size @size;
  }
}
// 设置点击背景颜色
.setTapColor(@c:rgba(0,0,0,0)) {
  -webkit-tap-highlight-color: @c;
}
//svg背景icon
.icon-default {
  display: inline-block;
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-position: center center;
  -webkit-mask-size: contain;
}
